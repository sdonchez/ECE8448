
@article{benhani_security_2019,
	title = {The {Security} of {ARM} {TrustZone} in a {FPGA}-{Based} {SoC}},
	volume = {68},
	issn = {0018-9340, 1557-9956, 2326-3814},
	url = {https://ieeexplore.ieee.org/document/8643768/},
	doi = {10.1109/TC.2019.2900235},
	abstract = {Cybersecurity of embedded systems has become a major challenge for the development of the Internet of Things, of Cloud computing and other trendy applications without devoting a signiﬁcant part of the design budget to industrial players. Technologies like TrustZone, provided by ARM, support a Trusted Execution Environment (TEE) software architecture and are inexpensive integrated solutions. While this technology allows isolation and secure execution of critical software applications (e.g., banking), recent preliminary works highlighted some security breaches or limitations when the ARM processors are embedded in a FPGA-based heterogeneous SoCs such as the Xilinx Zynq or Intel SoC FPGA devices. This paper highlights the security issue of such complex SoCs and details six efﬁcient attacks on the ARM TrustZone extension in the SoC. A prototype system design on a Xilinx Zynq SoC is the target of the attacks presented in this paper but they could be adapted to other SoCs. This paper also includes recommendations and security solutions to design a trustworthy embedded system with a FPGA-based heterogeneous SoC.},
	language = {en},
	number = {8},
	urldate = {2020-02-19},
	journal = {IEEE Transactions on Computers},
	author = {Benhani, E. M. and Bossuet, L. and Aubert, A.},
	month = aug,
	year = {2019},
	keywords = {TrustZone},
	pages = {1238--1248},
	file = {Benhani et al. - 2019 - The Security of ARM TrustZone in a FPGA-Based SoC.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\A35R4KXY\\Benhani et al. - 2019 - The Security of ARM TrustZone in a FPGA-Based SoC.pdf:application/pdf}
}

@inproceedings{jyothi_fpga_2016,
	address = {Scottsdale, AZ, USA},
	title = {{FPGA} {Trust} {Zone}: {Incorporating} trust and reliability into {FPGA} designs},
	isbn = {978-1-5090-5142-7},
	shorttitle = {{FPGA} {Trust} {Zone}},
	url = {http://ieeexplore.ieee.org/document/7753346/},
	doi = {10.1109/ICCD.2016.7753346},
	abstract = {This paper proposes a novel methodology FPGA Trust Zone (FTZ) to incorporate security into the design cycle to detect and isolate anomalies such as Hardware Trojans in the FPGA fabric. Anomalies are identiﬁed using violation to spatial correlation of process variation in FPGA fabric. Anomalies are isolated using Xilinx Isolation Design Flow (IDF) methodology. FTZ helps identify and partition the FPGA into areas that are devoid of anomalies and thus, assists to run designs securely and reliably even in an anomaly-infected FPGA. FTZ also assists IDF to select trustworthy areas for implementing isolated designs and trusted routes. We demonstrate the effectiveness of FTZ for AES and RC5 designs on Xilinx Virtex-7 and Atrix-7 FPGAs.},
	language = {en},
	urldate = {2020-02-19},
	booktitle = {2016 {IEEE} 34th {International} {Conference} on {Computer} {Design} ({ICCD})},
	publisher = {IEEE},
	author = {Jyothi, Vinayaka and Thoonoli, Manasa and Stern, Richard and Karri, Ramesh},
	month = oct,
	year = {2016},
	keywords = {TrustZone},
	pages = {600--605},
	file = {Jyothi et al. - 2016 - FPGA Trust Zone Incorporating trust and reliabili.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\KWM8CTP3\\Jyothi et al. - 2016 - FPGA Trust Zone Incorporating trust and reliabili.pdf:application/pdf}
}

@inproceedings{barbareschi_adoption_2013,
	address = {COMPIEGNE, France},
	title = {On the {Adoption} of {FPGA} for {Protecting} {Cyber} {Physical} {Infrastructures}},
	isbn = {978-0-7695-5094-7},
	url = {http://ieeexplore.ieee.org/document/6681266/},
	doi = {10.1109/3PGCIC.2013.72},
	abstract = {Up to few years ago, FPGAs were not suitable to develop smart sensor systems because of power consumption and programming effort. Modern technologies and programming techniques overcame these limitations. Furthermore thanks to ﬂexible and efﬁcient reconﬁguration, FPGAs can be used as conﬁgurable wireless sensor nodes and they are very promising in the protection of critical infrastructures. In the recent years, particular emphasis was given to pervasive wireless sensor nodes that enabled the widespread of innovative applications for smartgrid monitoring and mobile cyber-physical infrastructures; although security remains one of the main open challenges to face. In this paper we will analyze all potentialities of adopting FPGAs in protecting Cyber Physical Infrastructures by illustrating with simple scenarios how they can be used to improve security and robustness of heterogeneous networks.},
	language = {en},
	urldate = {2020-02-19},
	booktitle = {2013 {Eighth} {International} {Conference} on {P2P}, {Parallel}, {Grid}, {Cloud} and {Internet} {Computing}},
	publisher = {IEEE},
	author = {Barbareschi, Mario and Battista, Ermanno and Casola, Valentina and Mazzocca, Antonino Mazzeo e Nicola},
	month = oct,
	year = {2013},
	pages = {430--435},
	file = {Barbareschi et al. - 2013 - On the Adoption of FPGA for Protecting Cyber Physi.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\BQ9NHR4W\\Barbareschi et al. - 2013 - On the Adoption of FPGA for Protecting Cyber Physi.pdf:application/pdf}
}

@book{badrignans_security_2011,
	address = {Dordrecht ; New York},
	title = {Security trends for {FPGAS}: from secured to secure reconfigurable systems},
	isbn = {978-94-007-1337-6 978-94-007-1338-3},
	shorttitle = {Security trends for {FPGAS}},
	language = {en},
	publisher = {Springer},
	editor = {Badrignans, Benoit},
	year = {2011},
	note = {OCLC: ocn747834019},
	keywords = {Field programmable gate arrays, Security measures},
	file = {Badrignans - 2011 - Security trends for FPGAS from secured to secure .pdf:C\:\\Users\\sgdon\\Zotero\\storage\\3QTEQSJA\\Badrignans - 2011 - Security trends for FPGAS from secured to secure .pdf:application/pdf}
}

@inproceedings{winter_experimenting_2012,
	address = {Liverpool, United Kingdom},
	title = {Experimenting with {ARM} {TrustZone} -- {Or}: {How} {I} {Met} {Friendly} {Piece} of {Trusted} {Hardware}},
	isbn = {978-1-4673-2172-3 978-0-7695-4745-9},
	shorttitle = {Experimenting with {ARM} {TrustZone} -- {Or}},
	url = {http://ieeexplore.ieee.org/document/6296108/},
	doi = {10.1109/TrustCom.2012.157},
	abstract = {ARM TrustZone is an emerging embedded security technology based on the split of a system into a secure and normal world. Currently a number of System-on-Chip platforms exist, which include support for ARM TrustZone. Unfortunately relatively little work has been done on open-source software for TrustZone systems. In our belief this is partly caused by the lack of cost-efﬁcient development boards, which allow access to ARM TrustZone features. This paper discusses experiences made by the authors with a rather inexpensive development board and shows how system-level development on TrustZone-enabled hardware is possible in class-room settings.},
	language = {en},
	urldate = {2020-02-19},
	booktitle = {2012 {IEEE} 11th {International} {Conference} on {Trust}, {Security} and {Privacy} in {Computing} and {Communications}},
	publisher = {IEEE},
	author = {Winter, Johannes},
	month = jun,
	year = {2012},
	keywords = {TrustZone},
	pages = {1161--1166},
	file = {Winter - 2012 - Experimenting with ARM TrustZone -- Or How I Met .pdf:C\:\\Users\\sgdon\\Zotero\\storage\\T9XSYDNF\\Winter - 2012 - Experimenting with ARM TrustZone -- Or How I Met .pdf:application/pdf}
}

@article{noauthor_arm_nodate,
	title = {{ARM} {Security} {Technology} {Building} a {Secure} {System} using {TrustZone} {Technology}},
	language = {en},
	pages = {108},
	file = {ARM Security Technology Building a Secure System u.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\LSW855MW\\LSW855MW.pdf:application/pdf}
}

@article{alves_enabling_2004,
	title = {Enabling {Trusted} {Computing} in {Embedded} {Systems}},
	volume = {3},
	language = {en},
	number = {4},
	author = {Alves, Tiago and Felton, Don},
	year = {2004},
	pages = {7},
	file = {Alves and Felton - 2004 - Enabling Trusted Computing in Embedded Systems.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\9Y736FFP\\Alves and Felton - 2004 - Enabling Trusted Computing in Embedded Systems.pdf:application/pdf}
}

@inproceedings{zhao_providing_2014,
	address = {Scottsdale, Arizona, USA},
	title = {Providing {Root} of {Trust} for {ARM} {TrustZone} using {On}-{Chip} {SRAM}},
	isbn = {978-1-4503-3149-4},
	url = {http://dl.acm.org/citation.cfm?doid=2666141.2666145},
	doi = {10.1145/2666141.2666145},
	abstract = {We present the design, implementation and evaluation of the root of trust for the Trusted Execution Environment (TEE) provided by ARM TrustZone based on the on-chip SRAM Physical Unclonable Functions (PUFs). We ﬁrst implement a building block which provides the foundations for the root of trust: secure key storage and truly random source. The building block doesn’t require on or oﬀ-chip secure non-volatile memory to store secrets, but provides a high-level security: resistance to physical attackers capable of controlling all external interfaces of the system on chip (SoC). Based on the building block, we build the root of trust consisting of seal/unseal primitives for secure services running in the TEE, and a software-only TPM service running in the TEE which provides rich TPM functionalities for the rich OS running in the normal world of TrustZone. The root of trust resists software attackers capable of compromising the entire rich OS. Besides, both the building block and the root of trust run on the powerful ARM processor. In one word, we leverage the on-chip SRAM, commonly available on mobile devices, to achieve a low-cost, secure, and eﬃcient design of the root of trust.},
	language = {en},
	urldate = {2020-02-26},
	booktitle = {Proceedings of the 4th {International} {Workshop} on {Trustworthy} {Embedded} {Devices} - {TrustED} '14},
	publisher = {ACM Press},
	author = {Zhao, Shijun and Zhang, Qianying and Hu, Guangyao and Qin, Yu and Feng, Dengguo},
	year = {2014},
	pages = {25--36},
	file = {Zhao et al. - 2014 - Providing Root of Trust for ARM TrustZone using On.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\SAY8QA7V\\Zhao et al. - 2014 - Providing Root of Trust for ARM TrustZone using On.pdf:application/pdf}
}

@inproceedings{benhani_security_2017,
	address = {Munich},
	title = {On the security evaluation of the {ARM} {TrustZone} extension in a heterogeneous {SoC}},
	isbn = {978-1-5386-4034-0},
	url = {http://ieeexplore.ieee.org/document/8226018/},
	doi = {10.1109/SOCC.2017.8226018},
	abstract = {As the complexity of System-on-Chip (SoC) and the reuse of third party IP continues to grow, the security of a heterogeneous SoC has become a critical issue. In order to increase the software security of such SoC, the TrustZone technology has been proposed by ARM to enforce software security. Nevertheless, many SoC embed non-trusted third party Intellectual Property (IP) trying to take the beneﬁts of this technology. In such case, is the security guaranteed by the ARM TrustZone technology reduced by the heterogeneity of SoC? In order to answer to this question, this paper presents relevant attack scenarios based on third party IP to exploit some security failures of the TrustZone extension through the all SoC. At the end, this article proposes to SoC designers to consider some design solutions to limit the impact of a malicious IP.},
	language = {en},
	urldate = {2020-02-26},
	booktitle = {2017 30th {IEEE} {International} {System}-on-{Chip} {Conference} ({SOCC})},
	publisher = {IEEE},
	author = {Benhani, El Mehdi and Marchand, Cedric and Aubert, Alain and Bossuet, Lilian},
	month = sep,
	year = {2017},
	pages = {108--113},
	file = {Benhani et al. - 2017 - On the security evaluation of the ARM TrustZone ex.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\9M5D74LD\\9M5D74LD.pdf:application/pdf}
}

@misc{noauthor_trustzone_nodate,
	title = {{TrustZone}},
	url = {https://developer.arm.com/ip-products/security-ip/trustzone},
	abstract = {Arm TrustZone technology provides system-wide hardware isolation for trusted software.},
	language = {en},
	urldate = {2020-05-05},
	journal = {ARM Developer},
	note = {Library Catalog: developer.arm.com},
	file = {Snapshot:C\:\\Users\\sgdon\\Zotero\\storage\\MTNA437P\\trustzone.html:text/html}
}

@misc{noauthor_axi_2017,
	title = {{AXI} {Interconnect} v2.1 {LogiCORE} {IP} {Product} {Guide}},
	shorttitle = {{AXI} {Interconnect} {Product} {Guide}},
	url = {https://www.xilinx.com/support/documentation/ip_documentation/axi_interconnect/v2_1/pg059-axi-interconnect.pdf},
	language = {English},
	urldate = {2020-05-06},
	publisher = {Xilinx, Inc.},
	month = dec,
	year = {2017},
	file = {pg059-axi-interconnect.pdf:C\:\\Users\\sgdon\\Zotero\\storage\\KQ7N28Q8\\pg059-axi-interconnect.pdf:application/pdf}
}

@misc{noauthor_intel_nodate,
	title = {Intel {Quartus} {Prime} {Standard} {Edition} {User} {Guide}: {Platform} {Designer}},
	url = {https://www.intel.com/content/www/us/en/programmable/documentation/jrw1529444674987.html},
	urldate = {2020-05-06},
	file = {Intel Quartus Prime Standard Edition User Guide\: Platform Designer:C\:\\Users\\sgdon\\Zotero\\storage\\IVYLKAXJ\\jrw1529444674987.html:text/html}
}

@inproceedings{bukasa_how_2018,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {How {TrustZone} {Could} {Be} {Bypassed}: {Side}-{Channel} {Attacks} on a {Modern} {System}-on-{Chip}},
	isbn = {978-3-319-93524-9},
	shorttitle = {How {TrustZone} {Could} {Be} {Bypassed}},
	doi = {10.1007/978-3-319-93524-9_6},
	abstract = {Side-channel attacks (SCA) exploit the reification of a computation through its physical dimensions (current consumption, EM emission, ...). Focusing on Electromagnetic analyses (EMA), such analyses have mostly been considered on low-end devices: smartcards and microcontrollers. In the wake of recent works, we propose to analyze the effects of a modern microarchitecture on the efficiency of EMA (here Correlation Power Analysis and template attacks). We show that despite the difficulty to synchronize the measurements, the speed of the targeted core and the activity of other cores on the same chip can still be accommodated. Finally, we confirm that enabling the secure mode of TrustZone (a hardware-assisted software countermeasure) has no effect whatsoever on the EMA efficiency. Therefore, critical applications in TrustZone are not more secure than in the normal world with respect to EMA, in accordance with the fact that it is not a countermeasure against physical attacks. For the best of our knowledge this is the first application of EMA against TrustZone.},
	language = {en},
	booktitle = {Information {Security} {Theory} and {Practice}},
	publisher = {Springer International Publishing},
	author = {Bukasa, Sebanjila Kevin and Lashermes, Ronan and Le Bouder, Hélène and Lanet, Jean-Louis and Legay, Axel},
	editor = {Hancke, Gerhard P. and Damiani, Ernesto},
	year = {2018},
	keywords = {ARM TrustZone, Raspberry Pi 2, Side-Channel Analysis (SCA)},
	pages = {93--109},
	file = {Springer Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\A6TMI6LR\\Bukasa et al. - 2018 - How TrustZone Could Be Bypassed Side-Channel Atta.pdf:application/pdf}
}

@inproceedings{mukhtar_architectures_2019,
	title = {Architectures for {Security}: {A} comparative analysis of hardware security features in {Intel} {SGX} and {ARM} {TrustZone}},
	shorttitle = {Architectures for {Security}},
	doi = {10.1109/C-CODE.2019.8680982},
	abstract = {A variety of applications are executing on a large untrusted computing base, which includes the operating system, hypervisor, firmware, and hardware. This large computing base is becoming complex and unverifiable. This untrusted computing base problem opens a way for a malicious application to steal secrets of a security-critical application by compromising the untrusted computing base. To resolve the untrusted computing base problem, computer architectures have introduced a concept of the trusted execution environment, which aim to ensure the sensitive data to be stored and processed in an isolated environment. Existing popular trusted execution environments are relying on hardware to isolate the environments without or minimum relying on system software. However, existing hardware assisted trusted execution environments are still vulnerable to sophisticated attacks. This paper analyses popular trusted execution environments that are Intel SGX and ARM TrustZone in order to provide better insights about the intended scope of the protection. This paper illustrates the functionality, implementation and security analysis.},
	booktitle = {2019 2nd {International} {Conference} on {Communication}, {Computing} and {Digital} systems ({C}-{CODE})},
	author = {Mukhtar, Muhammad Asim and Bhatti, Muhammad Khurram and Gogniat, Guy},
	month = mar,
	year = {2019},
	keywords = {and ARM TrustZone, ARM TrustZone, Computer architecture, computer architectures, firmware, Hardware, hardware security features, Intel SGX, isolated environment, malicious application, Memory isolation, Operating systems, operating systems (computers), Random access memory, Security, security-critical application, TEE, trusted computing, trusted execution environments, Trusted Execution Environments, untrusted computing base problem},
	pages = {299--304},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\sgdon\\Zotero\\storage\\MIASN3CV\\8680982.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\DGX76DH4\\Mukhtar et al. - 2019 - Architectures for Security A comparative analysis.pdf:application/pdf}
}

@inproceedings{ngabonziza_trustzone_2016,
	title = {{TrustZone} {Explained}: {Architectural} {Features} and {Use} {Cases}},
	shorttitle = {{TrustZone} {Explained}},
	doi = {10.1109/CIC.2016.065},
	abstract = {ARM TrustZone is a hardware security extension technology, which aims to provide secure execution environment by splitting computer resources between two execution worlds, namely normal world and secure world. TrustZone is supported on different flavors of ARM architectures, that include architecture deployed on targets running regular applications, such as mobile devices and architecture for micro-controllers. As ARM is widely deployed on the majority of mobile and micro-controller devices, TrustZone's goal is to provide security for those platforms. In this paper, we will discuss details of different ARM architectures that support TrustZone technology. Then, we will review how TrustZone is implemented in the hardware and software of ARM products. We will also compare TrustZone with other implementations of trusted execution environments on the market.},
	booktitle = {2016 {IEEE} 2nd {International} {Conference} on {Collaboration} and {Internet} {Computing} ({CIC})},
	author = {Ngabonziza, Bernard and Martin, Daniel and Bailey, Anna and Cho, Haehyun and Martin, Sarah},
	month = nov,
	year = {2016},
	keywords = {architectural features, ARM architectures, ARM TrustZone, Computer architecture, computer resources, Coprocessors, Hardware, hardware security extension technology, microcontroller architecture, microcontrollers, mobile devices, Monitoring, normal world, reduced instruction set computing, Registers, regular applications, secure execution environment, secure world, Security, Software, trusted computing, trusted execution environments},
	pages = {445--451},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\sgdon\\Zotero\\storage\\P4HLAZY9\\7809736.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\GJG94EQD\\Ngabonziza et al. - 2016 - TrustZone Explained Architectural Features and Us.pdf:application/pdf}
}

@article{pinto_demystifying_2019,
	title = {Demystifying {Arm} {TrustZone}: {A} {Comprehensive} {Survey}},
	volume = {51},
	issn = {0360-0300},
	shorttitle = {Demystifying {Arm} {TrustZone}},
	url = {https://doi.org/10.1145/3291047},
	doi = {10.1145/3291047},
	abstract = {The world is undergoing an unprecedented technological transformation, evolving into a state where ubiquitous Internet-enabled “things” will be able to generate and share large amounts of security- and privacy-sensitive data. To cope with the security threats that are thus foreseeable, system designers can find in Arm TrustZone hardware technology a most valuable resource. TrustZone is a System-on-Chip and CPU system-wide security solution, available on today’s Arm application processors and present in the new generation Arm microcontrollers, which are expected to dominate the market of smart “things.” Although this technology has remained relatively underground since its inception in 2004, over the past years, numerous initiatives have significantly advanced the state of the art involving Arm TrustZone. Motivated by this revival of interest, this paper presents an in-depth study of TrustZone technology. We provide a comprehensive survey of relevant work from academia and industry, presenting existing systems into two main areas, namely, Trusted Execution Environments and hardware-assisted virtualization. Furthermore, we analyze the most relevant weaknesses of existing systems and propose new research directions within the realm of tiniest devices and the Internet of Things, which we believe to have potential to yield high-impact contributions in the future.},
	number = {6},
	urldate = {2020-05-06},
	journal = {ACM Computing Surveys},
	author = {Pinto, Sandro and Santos, Nuno},
	month = jan,
	year = {2019},
	keywords = {Arm, security, survey, TEE, TrustZone, virtualization},
	pages = {130:1--130:36},
	file = {Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\UP6FVM8Q\\Pinto and Santos - 2019 - Demystifying Arm TrustZone A Comprehensive Survey.pdf:application/pdf}
}

@inproceedings{cho_primecount_2018,
	address = {San Juan, PR, USA},
	series = {{ACSAC} '18},
	title = {Prime+{Count}: {Novel} {Cross}-world {Covert} {Channels} on {ARM} {TrustZone}},
	isbn = {978-1-4503-6569-7},
	shorttitle = {Prime+{Count}},
	url = {https://doi.org/10.1145/3274694.3274704},
	doi = {10.1145/3274694.3274704},
	abstract = {The security of ARM TrustZone relies on the idea of splitting system-on-chip hardware and software into two worlds, namely normal world and secure world. In this paper, we report cross-world covert channels, which exploit the world-shared cache in the TrustZone architecture. We design a Prime+Count technique that only cares about how many cache sets or lines have been occupied. The coarser-grained approach significantly reduces the noise introduced by the pseudo-random replacement policy and world switching. Using our Prime+Count technique, we build covert channels in single-core and cross-core scenarios in the TrustZone architecture. Our results demonstrate that Prime+Count is an effective technique for enabling cross-world covert channels on ARM TrustZone.},
	urldate = {2020-05-06},
	booktitle = {Proceedings of the 34th {Annual} {Computer} {Security} {Applications} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Cho, Haehyun and Zhang, Penghui and Kim, Donguk and Park, Jinbum and Lee, Choong-Hoon and Zhao, Ziming and Doupé, Adam and Ahn, Gail-Joon},
	month = dec,
	year = {2018},
	keywords = {ARM TrustZone, Cache side-channel, Covert channels},
	pages = {441--452},
	file = {Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\VL3ZLKRE\\Cho et al. - 2018 - Prime+Count Novel Cross-world Covert Channels on .pdf:application/pdf}
}

@inproceedings{gross_breaking_2019,
	address = {London, United Kingdom},
	series = {{ASHES}'19},
	title = {Breaking {TrustZone} {Memory} {Isolation} through {Malicious} {Hardware} on a {Modern} {FPGA}-{SoC}},
	isbn = {978-1-4503-6839-1},
	url = {https://doi.org/10.1145/3338508.3359568},
	doi = {10.1145/3338508.3359568},
	abstract = {FPGA-SoCs are heterogeneous computing systems consisting of reconfigurable hardware and high performance processing units. This combination enables a flexible design methodology for embedded systems. However, the sharing of resources between these heterogeneous systems opens the door to attacks from one system on the other. This work considers Direct Memory Access attacks from a malicious hardware block inside the reconfigurable logic on the CPU. Previous works have shown similar attacks on FPGA-SoCs containing no memory isolation between the FPGA and the CPU. Our work studies the same idea on a system based on the Xilinx Zynq Ultrascale+ architecture. This platform contains memory isolation mechanisms such as a system memory management unit, memory protection units and supports ARM TrustZone technology. Despite the existence of these protection mechanisms, the two attacks presented in this work show that a malicious hardware block can still interfere with a security critical task executed on the CPU inside ARM TrustZone},
	urldate = {2020-05-06},
	booktitle = {Proceedings of the 3rd {ACM} {Workshop} on {Attacks} and {Solutions} in {Hardware} {Security} {Workshop}},
	publisher = {Association for Computing Machinery},
	author = {Gross, Mathieu and Jacob, Nisha and Zankl, Andreas and Sigl, Georg},
	month = nov,
	year = {2019},
	keywords = {dma attack, fpga-socs, hardware trojan, memory isolation, trusted execution environment, trustzone},
	pages = {3--12},
	file = {Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\P4L3AQJZ\\Gross et al. - 2019 - Breaking TrustZone Memory Isolation through Malici.pdf:application/pdf}
}

@article{bhunia_hardware_2014,
	title = {Hardware {Trojan} {Attacks}: {Threat} {Analysis} and {Countermeasures}},
	volume = {102},
	issn = {1558-2256},
	shorttitle = {Hardware {Trojan} {Attacks}},
	doi = {10.1109/JPROC.2014.2334493},
	abstract = {Security of a computer system has been traditionally related to the security of the software or the information being processed. The underlying hardware used for information processing has been considered trusted. The emergence of hardware Trojan attacks violates this root of trust. These attacks, in the form of malicious modifications of electronic hardware at different stages of its life cycle, pose major security concerns in the electronics industry. An adversary can mount such an attack with an objective to cause operational failure or to leak secret information from inside a chip-e.g., the key in a cryptographic chip, during field operation. Global economic trend that encourages increased reliance on untrusted entities in the hardware design and fabrication process is rapidly enhancing the vulnerability to such attacks. In this paper, we analyze the threat of hardware Trojan attacks; present attack models, types, and scenarios; discuss different forms of protection approaches, both proactive and reactive; and describe emerging attack modes, defenses, and future research pathways.},
	number = {8},
	journal = {Proceedings of the IEEE},
	author = {Bhunia, Swarup and Hsiao, Michael S. and Banga, Mainak and Narasimhan, Seetharam},
	month = aug,
	year = {2014},
	note = {Conference Name: Proceedings of the IEEE},
	keywords = {Circuit faults, Computer security, computer system security, electronic hardware malicious modifications, electronics industry, Fabrication, global economic trend, Hardware, Hardware intellectual property (IP) trust, hardware obfuscation, hardware Trojan attack, hardware Trojan attacks, information processing, Integrated circuit modeling, Integrated circuits, invasive software, proactive protection approach, reactive protection approach, self-referencing, side-channel analysis, threat analysis, Trojan detection, Trojan horses, Trojan taxonomy, Trojan tolerance},
	pages = {1229--1247},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\sgdon\\Zotero\\storage\\AGSHHSD8\\6856140.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\sgdon\\Zotero\\storage\\32B6REFX\\Bhunia et al. - 2014 - Hardware Trojan Attacks Threat Analysis and Count.pdf:application/pdf}
}